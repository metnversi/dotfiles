#!/usr/sbin/nft -f
flush ruleset

table inet max_secu {
      set LANv4 {
              type ipv4_addr
              flags interval
              elements = { 0.0.0.0, 192.168.122.0/24, 192.168.1.0/24, 169.254.0.0/16, \
	                                                  172.19.0.0/16, 172.18.0.0/16, 172.17.0.0/16 }
      }
	
      set blackhole_ipv4 {
              type ipv4_addr;
              flags dynamic, timeout;
              timeout 10m;
              size 65536;
      }

      set blackhole_ipv6 {
              type ipv6_addr;
              flags dynamic, timeout;
              size 65536;
      }
	
      set LANv6 {
              type ipv6_addr
              flags interval
              elements = { fd00::/8, fe80::/10 }
      }
	
      set https {
              type ipv4_addr;
              flags dynamic;
              size 65536;
              timeout 60m;
      }
		
      chain my_input_lan {
              meta l4proto { tcp, udp } th dport 2049 accept comment "Accept NFS"
              udp dport netbios-ns accept comment "Accept NetBIOS Name Service (nmbd)"
              udp dport netbios-dgm accept comment "Accept NetBIOS Datagram Service (nmbd)"
              tcp dport netbios-ssn accept comment "Accept NetBIOS Session Service (smbd)"
              #udp sport { bootpc, 4011 } udp dport { bootps, 4011 } accept comment "Accept PXE"
              udp dport tftp accept comment "Accept TFTP"
              tcp dport { http, https, 3080, 8080, 21, 22, 9090, 8443, 6443, 5000-6000, 18080, 28080, 3000, 9113 } accept
              udp dport { 67, 53, 1023, 5000-6000 } accept
      }

      chain my_input {
              type filter hook input priority filter; policy drop;
              ct state invalid drop comment "Drop invalid connections"
              ct state established,related accept comment "Accept traffic originated from us"
              ct state new tcp dport 443 update @https { ip saddr counter }
              ct state new tcp dport {22, 443} \
                            meter flood_ipv4 size 128000 { ip saddr timeout 10s limit rate over 10/second } \
                            log prefix "nftables [BLACKHOLE]: " \
                            add @blackhole_ipv4 { ip saddr timeout 3m }
              ct state new tcp dport {22,443} \
                      meter flood_ipv6 size 128000 { ip6 saddr and ffff:ffff:ffff:ffff:: timeout 10s limit rate over 10/second } \
                      log prefix "nftables [BLACKHOLE]: " \
                      add @blackhole_ipv6 { ip6 saddr and ffff:ffff:ffff:ffff:: timeout 3m }
              #ct timeout set "my_timeout" drop
              ip saddr @blackhole_ipv4 tcp flags syn counter drop
              ip6 saddr and ffff:ffff:ffff:ffff:: @blackhole_ipv6 counter drop
              iif lo accept comment "Accept any localhost traffic"
              fib daddr . iif type != { local, broadcast, multicast } drop comment "Drop if the dest IP is not configured on the incoming interface (strong host model)"
              #udp dport mdns ip6 daddr ff02::fb accept comment "Accept mDNS for avahi printer discovery"
              #udp dport mdns ip daddr 224.0.0.251 accept comment "Accept mDNS for avahi printer discovery"
              ip saddr @LANv4 jump my_input_lan comment "Connections from private IPv4"
              ip6 saddr @LANv6 jump my_input_lan comment "Connections from private IPv6"
              log prefix "nftables: " level warn flags ip options
      }

      chain my_forward {
              type filter hook forward priority filter; policy drop;
	          ip saddr 192.168.122.0/24 ct state new,established,related accept
              ip daddr 192.168.122.0/24 ct state established,related accept
              ip saddr 192.168.1.10 ip daddr 192.168.122.0/24 ct state new,established,related accept
              ip saddr 192.168.122.0/24 ip daddr 192.168.1.10 ct state established,related accept
              iifname "docker0" accept
              oifname "docker0" accept
              iifname "br+" oifname "br+" accept
              log prefix "nftables [FORWARD]: " level warn flags ip options
              #iifname "br+" accept
              #oifname "br+" accept
      }

      chain my_output {
              type filter hook output priority filter; policy accept;
              
      }
}
table ip for_nat {
    #chain my_prerouting {
    #          type nat hook prerouting priority 100;  
    #          ip daddr 10.55.110.1 udp dport 53 dnat to 10.55.110.15:53;  
    #}

    chain my_postrouting {
          type nat hook postrouting priority 100;
          ip saddr 192.168.122.0/24 masquerade;
	      ip saddr 172.19.0.0/16 masquerade;
	      ip saddr 172.18.0.0/16 masquerade;
	      ip saddr 172.17.0.0/16 masquerade;
    }
#	chain my_postrouting {
#		type nat hook postrouting priority 100;
#		ip saddr 192.168.122.0/24 masquerade 
#		ip daadr 10.55.110.1 udp dport 53 to-destination 10.55.110.15 dport 53
#	}
}
